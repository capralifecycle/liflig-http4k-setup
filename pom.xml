<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>no.liflig</groupId>
    <artifactId>kotlin-parent</artifactId>
    <version>3.20250228.043044</version>
  </parent>

  <!--suppress MavenRedundantGroupId -->
  <groupId>no.liflig</groupId>
  <artifactId>liflig-http4k-setup</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>

  <name>${project.artifactId}</name>

  <properties>
    <major-version>4</major-version>
    <revision>${major-version}.local-SNAPSHOT</revision>

    <java.version>21</java.version>
    <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
    <kotlin.compiler.apiVersion>2.1</kotlin.compiler.apiVersion>

    <http4k.version>6.4.1.0</http4k.version>
    <kotlinx-serialization.version>1.8.0</kotlinx-serialization.version>
    <liflig-logging.version>2.20250331.082643</liflig-logging.version>
    <slf4j.version>2.0.17</slf4j.version>

    <!-- Testing-->
    <junit-bom.version>5.12.1</junit-bom.version>
    <kotest-assertions-core-jvm.version>5.9.1</kotest-assertions-core-jvm.version>
    <logback-classic.version>1.5.18</logback-classic.version>
    <logstash-logback-encoder.version>8.0</logstash-logback-encoder.version>
  </properties>

  <scm>
    <developerConnection>scm:git:https://github.com/capralifecycle/liflig-http4k-setup.git
    </developerConnection>
    <connection>scm:git:https://github.com/capralifecycle/liflig-http4k-setup.git</connection>
    <url>https://github.com/capralifecycle/liflig-http4k-setup</url>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/capralifecycle/*</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/capralifecycle/liflig-http4k-setup</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.http4k</groupId>
        <artifactId>http4k-bom</artifactId>
        <version>${http4k.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>${slf4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-api-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-format-kotlinx-serialization</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-ops-opentelemetry</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-serialization-json</artifactId>
      <version>${kotlinx-serialization.version}</version>
    </dependency>

    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>liflig-logging</artifactId>
      <version>${liflig-logging.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit5</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-classic.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash-logback-encoder.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-assertions-core-jvm</artifactId>
      <version>${kotest-assertions-core-jvm.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- For testing with an actual HTTP server -->
      <groupId>org.http4k</groupId>
      <artifactId>http4k-server-jetty</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jvmTarget>${java.version}</jvmTarget>
          <compilerPlugins>
            <plugin>kotlinx-serialization</plugin>
          </compilerPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-serialization</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
